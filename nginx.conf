daemon off;
worker_processes  1;
error_log  /dev/stderr info;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    server_tokens off;

    include       mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time $upstream_response_time $pipe';

    access_log  /dev/stdout  main;

    # include /etc/nginx/conf.d/*.conf;

    init_by_lua_block {
        local cfg = require "wiola.config"
        cfg.config({
            realms = {"realm1"},
            store = "redis",
            storeConfig = {
                host = "127.0.0.1",
                port = 6379,
            },
            metaAPI = {
                session = true,
                subscription = true,
                registration = true,
            }
        })
        ngx.log(ngx.ERR, "Wiola configured")
    }
    # Configure a vhost
    server {
        listen 80;
        # example location for websocket WAMP connection
        location /ws {
            set $wiola_max_payload_len 65535; # Optional parameter. Set the value to suit your needs
            lua_socket_log_errors off;
            lua_check_client_abort on;
            # This is needed to set additional websocket protocol headers
            header_filter_by_lua_file /usr/local/openresty/luajit/share/lua/5.1/wiola/headers.lua;
            # Set a handler for connection
            content_by_lua_file /usr/local/openresty/luajit/share/lua/5.1/wiola/ws-handler.lua;
        }
    }
}
